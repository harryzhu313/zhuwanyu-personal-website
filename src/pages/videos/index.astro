---
import CollectionLayout from "../../layouts/CollectionLayout.astro";
import Introduction from "../../components/Introduction.astro";

// 简化的视频数据结构 - 直接在这里维护
const videos = [
  {
    title: "涡街流量计",
    description: "这是给公司产品制作的 3D 宣传视频",
    thumbnail: "https://i.ytimg.com/vi/fK7JNBXE2Ig/hqdefault.jpg",
    url: "https://www.youtube.com/embed/fK7JNBXE2Ig?si=NJ2fH_wc5urJYazN",
    date: "2024-06"
  },
  {
    title: "IO-Link 继电器模组",
    description: "产品拍摄练习",
    thumbnail: "https://i.ytimg.com/vi/az1d9-p9hNA/hqdefault.jpg",
    url: "https://www.youtube.com/embed/az1d9-p9hNA?si=abc123def456",
    date: "2021-08"
  },
  {
    title: "测试视频",
    description: "分享一些编程心得",
    thumbnail: "https://i.ytimg.com/vi/XcUcA86NkOE/hqdefault.jpg",
    url: "https://www.youtube.com/embed/XcUcA86NkOE?si=pdYn0aL5eTAMa7Su",
    date: "2024-03"
  },
  {
    title: "测试",
    description: "分享一些编程心得",
    thumbnail: "https://via.placeholder.com/300x200?text=Tech+Talk",
    url: "https://www.youtube.com/embed/example?si=ghi345jkl678",
    date: "2024-03"
  },
  {
    title: "测试",
    description: "分享一些编程心得",
    thumbnail: "https://via.placeholder.com/300x200?text=Tech+Talk",
    url: "https://www.youtube.com/embed/example?si=mno901pqr234",
    date: "2024-03"
  },
  // 在这里继续添加更多视频...
];

// 将YouTube URL转换为嵌入URL的函数
function getEmbedUrl(url: string): string {
  // 处理标准YouTube链接
  if (url.includes('youtube.com/watch?v=')) {
    const videoId = url.split('v=')[1]?.split('&')[0];
    return videoId ? `https://www.youtube.com/embed/${videoId}?si=NJ2fH_wc5urJYazN` : ''; // 这里需要修改，如果是嵌入链接直接返回嵌入链接，但如果是 YouTube URL，还需要对 si 参数进行处理
  }
  // 处理你提供的完整嵌入链接格式
  if (url.includes('youtube.com/embed/')) {
    return url;
  }
  return '';
}
---

<CollectionLayout collection="videos">
  <Introduction collection="videos">
    <p style="text-align: justify;">
      1895 年 12 月 28 日。那天晚上，卢米埃尔兄弟在巴黎卡普辛大道的"印度咖啡馆"地下室，用他们自研的 Cinématographe 向付费观众放映了十段短片——这是历史上第一次公开售票的放映，也第一次把摄影机、冲印机和放映机三合一地带到公众面前，从此"电影"才真正成为一种大众艺术形式。
    </p>
    <p style="margin-top: 10px;">
      如今随着摄影技术的成熟，每个人都可以做自己生活的导演，与他人分享生命中的美好时刻。
    </p>
  </Introduction>

  <section class="section">
    <div class="container is-max-desktop">
      <div class="video-grid">
        {videos.map((video, index) => (
          <div class="video-card" data-video-url={getEmbedUrl(video.url)} data-video-title={video.title}>
            <div class="video-thumbnail">
              <img 
                src={video.thumbnail} 
                alt={video.title}
                onerror="this.src='https://via.placeholder.com/400x225/cccccc/666666?text=视频封面'"
              />
              <div class="play-button">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                  <path d="M8 5v14l11-7z" fill="currentColor"/>
                </svg>
              </div>
            </div>
            <div class="video-info">
              <h3 class="video-title">{video.title}</h3>
              <p class="video-description">{video.description}</p>
              <span class="video-date">{video.date}</span>
            </div>
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- 视频播放弹窗 -->
  <div id="videoModal" class="video-modal">
    <div class="modal-content">
      <button class="close-button" id="closeVideoButton">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
          <path d="M18 6L6 18M6 6l12 12" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
        </svg>
      </button>
      <div class="modal-body">
        <iframe 
          id="videoFrame"
          width="100%" 
          height="100%" 
          src="" 
          title="YouTube video player" 
          frameborder="0" 
          allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" 
          referrerpolicy="strict-origin-when-cross-origin" 
          allowfullscreen>
        </iframe>
      </div>
    </div>
  </div>
</CollectionLayout>

<style>
.video-grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 1.5rem;
  margin-top: 2rem;
}

.video-card {
  background: white;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  height: 100%;
  display: flex;
  flex-direction: column;
}

.video-card:hover {
  transform: translateY(-4px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
}

.video-card {
  cursor: pointer;
}

.video-thumbnail {
  position: relative;
  width: 100%;
  height: 200px;
  overflow: hidden;
}

.video-thumbnail img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.2s ease;
}

.video-card:hover .video-thumbnail img {
  transform: scale(1.05);
}

.play-button {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: rgba(0, 0, 0, 0.8);
  color: white;
  width: 60px;
  height: 60px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background 0.2s ease;
}

.video-card:hover .play-button {
  background: rgba(0, 0, 0, 0.9);
}

.video-info {
  padding: 1.5rem;
  flex: 1;
  display: flex;
  flex-direction: column;
}

.video-title {
  font-size: 1.25rem;
  font-weight: 600;
  margin: 0 0 0.5rem 0;
  color: #2c3e50;
  line-height: 1.3;
}

.video-description {
  color: #7f8c8d;
  font-size: 0.95rem;
  margin: 0 0 1rem 0;
  line-height: 1.5;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
  flex: 1;
}

.video-date {
  font-size: 0.85rem;
  color: #95a5a6;
  font-weight: 500;
  margin-top: auto;
}

/* 深色模式支持 */
@media (prefers-color-scheme: dark) {
  .video-card {
    background: #2c3e50;
    color: white;
  }
  
  .video-title {
    color: #ecf0f1;
  }
  
  .video-description {
    color: #bdc3c7;
  }
  
  .video-date {
    color: #95a5a6;
  }
}

/* 响应式设计 */
@media (max-width: 1200px) {
  .video-grid {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media (max-width: 900px) {
  .video-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (max-width: 600px) {
  .video-grid {
    grid-template-columns: 1fr;
    gap: 1.5rem;
  }
  
  .video-info {
    padding: 1rem;
  }
}

/* 视频弹窗样式 */
.video-modal {
  display: none;
  position: fixed;
  z-index: 1000;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.8);
  backdrop-filter: blur(5px);
}

.modal-content {
  position: relative;
  background-color: black;
  margin: 2% auto;
  padding: 0;
  border-radius: 12px;
  width: 90%;
  max-width: 1000px;
  aspect-ratio: 16/9;
  overflow: hidden;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
}

.close-button {
  position: absolute;
  top: 15px;
  right: 15px;
  z-index: 1001;
  background: rgba(0, 0, 0, 0.7);
  border: none;
  font-size: 24px;
  cursor: pointer;
  color: white;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
}

.close-button:hover {
  background-color: rgba(0, 0, 0, 0.9);
  color: #e74c3c;
}

.modal-body {
  padding: 0;
  background: black;
  height: 100%;
}

.modal-body iframe {
  display: block;
  border: none;
  width: 100%;
  height: 100%;
}

/* 深色模式支持 */
@media (prefers-color-scheme: dark) {
  .modal-content {
    background-color: black;
  }
  
  .close-button:hover {
    background-color: rgba(0, 0, 0, 0.9);
  }
}

/* 响应式设计 */
@media (max-width: 768px) {
  .modal-content {
    width: 95%;
    margin: 5% auto;
    aspect-ratio: 16/9;
  }
  
  .modal-body iframe {
    height: 100%;
  }
}
</style>

<script>
// 打开视频弹窗
function openVideoModal(embedUrl: string, title: string): void {
  const modal = document.getElementById('videoModal');
  const videoFrame = document.getElementById('videoFrame') as HTMLIFrameElement;
  
  if (embedUrl && embedUrl !== 'https://www.youtube.com/embed/' && modal && videoFrame) {
    videoFrame.src = embedUrl;
    modal.style.display = 'block';
    document.body.style.overflow = 'hidden'; // 防止背景滚动
  }
}

// 关闭视频弹窗
function closeVideoModal(): void {
  const modal = document.getElementById('videoModal');
  const videoFrame = document.getElementById('videoFrame') as HTMLIFrameElement;
  
  if (modal && videoFrame) {
    modal.style.display = 'none';
    videoFrame.src = ''; // 停止视频播放
    document.body.style.overflow = 'auto'; // 恢复背景滚动
  }
}

// 点击弹窗背景关闭弹窗
document.addEventListener('DOMContentLoaded', function() {
  const modal = document.getElementById('videoModal');
  const closeButton = document.getElementById('closeVideoButton');
  
  // 为所有视频卡片添加点击事件
  const videoCards = document.querySelectorAll('.video-card');
  videoCards.forEach(card => {
    card.addEventListener('click', function(this: HTMLElement) {
      const videoUrl = this.getAttribute('data-video-url');
      const videoTitle = this.getAttribute('data-video-title');
      if (videoUrl && videoTitle) {
        openVideoModal(videoUrl, videoTitle);
      }
    });
  });
  
  // 为关闭按钮添加点击事件
  if (closeButton) {
    closeButton.addEventListener('click', function() {
      closeVideoModal();
    });
  }
  
  if (modal) {
    modal.addEventListener('click', function(event) {
      if (event.target === modal) {
        closeVideoModal();
      }
    });
  }
  
  // ESC键关闭弹窗
  document.addEventListener('keydown', function(event) {
    if (event.key === 'Escape') {
      closeVideoModal();
    }
  });
});

// 全局声明，确保TypeScript知道这些函数
declare global {
  function openVideoModal(embedUrl: string, title: string): void;
  function closeVideoModal(): void;
}
</script>