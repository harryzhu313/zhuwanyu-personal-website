---
import { getNotionPhotos } from "../utils/notion-photos";

let debugResults: {
  photos: any[];
  totalCount: number;
  localizedCount: number;
  remoteCount: number;
  errors: string[];
} = {
  photos: [],
  totalCount: 0,
  localizedCount: 0,
  remoteCount: 0,
  errors: [],
};

try {
  const photos = await getNotionPhotos();
  debugResults.photos = photos.map(photo => ({
    title: photo.title,
    originalUrl: photo.image,
    isLocalPath: photo.image.startsWith('/_astro/'),
    isHttpUrl: photo.image.startsWith('http'),
    pathAnalysis: {
      hasAstroPrefix: photo.image.includes('/_astro/'),
      hasWebpExtension: photo.image.includes('.webp'),
      hasHash: photo.image.match(/_[a-zA-Z0-9]{8}\./),
    },
    imageStatus: photo.isRemote ? '远程图片' : '本地化成功',
  }));
  
  debugResults.totalCount = photos.length;
  debugResults.localizedCount = photos.filter(p => !p.isRemote).length;
  debugResults.remoteCount = photos.filter(p => p.isRemote).length;
  
} catch (error) {
  debugResults.errors.push(String(error));
}
---

<!DOCTYPE html>
<html>
<head>
  <title>图片本地化调试</title>
  <style>
    body { 
      font-family: system-ui, sans-serif; 
      padding: 20px; 
      line-height: 1.6;
    }
    .success { color: #22c55e; font-weight: bold; }
    .warning { color: #f59e0b; font-weight: bold; }
    .error { color: #ef4444; font-weight: bold; }
    .card { 
      border: 1px solid #e5e7eb; 
      border-radius: 8px; 
      padding: 16px; 
      margin: 12px 0;
      background: #f9fafb;
    }
    .status-local { background: #dcfce7; border-color: #22c55e; }
    .status-remote { background: #fef3c7; border-color: #f59e0b; }
    .url-display { 
      font-family: monospace; 
      background: #1f2937; 
      color: #f3f4f6; 
      padding: 8px; 
      border-radius: 4px; 
      word-break: break-all;
      margin: 8px 0;
    }
    .stats { 
      display: grid; 
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); 
      gap: 16px; 
      margin: 20px 0;
    }
    .stat-card {
      background: white;
      padding: 16px;
      border-radius: 8px;
      border: 1px solid #e5e7eb;
      text-align: center;
    }
    .test-section {
      background: #eff6ff;
      border: 1px solid #3b82f6;
      border-radius: 8px;
      padding: 16px;
      margin: 20px 0;
    }
  </style>
</head>
<body>
  <h1>🔍 图片本地化状态调试</h1>
  
  <div class="stats">
    <div class="stat-card">
      <h3>总照片数</h3>
      <div style="font-size: 2em; color: #3b82f6;">{debugResults.totalCount}</div>
    </div>
    <div class="stat-card">
      <h3>本地化成功</h3>
      <div style="font-size: 2em; color: #22c55e;">{debugResults.localizedCount}</div>
    </div>
    <div class="stat-card">
      <h3>仍为远程</h3>
      <div style="font-size: 2em; color: #f59e0b;">{debugResults.remoteCount}</div>
    </div>
  </div>

  <div class="test-section">
    <h2>🧪 验证方法</h2>
    <p><strong>本地化成功的特征：</strong></p>
    <ul>
      <li>✅ URL 以 <code>/_astro/</code> 开头</li>
      <li>✅ 包含哈希值（如 <code>_1msJ8H</code>）</li>
      <li>✅ 以 <code>.webp</code> 结尾（优化格式）</li>
      <li>✅ 在浏览器中能正常加载（不会404）</li>
    </ul>
    <p><strong>测试步骤：</strong></p>
    <ol>
      <li>检查下面每张图片的URL格式</li>
      <li>右键点击图片 → "在新标签页中打开图片"</li>
      <li>如果能正常显示且URL是 /_astro/ 格式，说明本地化成功</li>
    </ol>
  </div>

  <h2>📸 详细图片分析</h2>
  
  {debugResults.photos.length > 0 ? (
    debugResults.photos.map((photo, index) => (
      <div class={`card ${photo.isLocalPath ? 'status-local' : 'status-remote'}`}>
        <h3>{photo.title}</h3>
        
        <p class={photo.isLocalPath ? 'success' : 'warning'}>
          状态: {photo.imageStatus}
        </p>
        
        <div>
          <strong>图片URL:</strong>
          <div class="url-display">{photo.originalUrl}</div>
        </div>
        
        <div style="margin: 12px 0;">
          <strong>路径分析:</strong>
          <ul style="margin: 8px 0; padding-left: 20px;">
            <li class={photo.pathAnalysis.hasAstroPrefix ? 'success' : 'error'}>
              Astro路径前缀: {photo.pathAnalysis.hasAstroPrefix ? '✅' : '❌'}
            </li>
            <li class={photo.pathAnalysis.hasWebpExtension ? 'success' : 'warning'}>
              WebP格式: {photo.pathAnalysis.hasWebpExtension ? '✅' : '❌'}
            </li>
            <li class={photo.pathAnalysis.hasHash ? 'success' : 'warning'}>
              包含哈希: {photo.pathAnalysis.hasHash ? '✅' : '❌'}
            </li>
          </ul>
        </div>
        
        <div style="margin: 12px 0;">
          <strong>测试图片加载:</strong>
          <div style="margin: 8px 0;">
            <img 
              src={photo.originalUrl} 
              alt={photo.title}
              style="max-width: 200px; max-height: 150px; border: 1px solid #ccc; border-radius: 4px;"
              onload="this.nextElementSibling.textContent = '✅ 加载成功'"
              onerror="this.nextElementSibling.textContent = '❌ 加载失败'"
            />
            <div style="margin-top: 4px; font-weight: bold;">加载状态检测中...</div>
          </div>
        </div>
      </div>
    ))
  ) : (
    <div class="card status-remote">
      <p class="error">❌ 没有找到照片数据</p>
    </div>
  )}

  {debugResults.errors.length > 0 && (
    <div style="background: #fef2f2; border: 1px solid #ef4444; border-radius: 8px; padding: 16px; margin: 20px 0;">
      <h3 class="error">错误信息:</h3>
      {debugResults.errors.map(error => (
        <div class="url-display" style="background: #7f1d1d; color: #fca5a5;">
          {error}
        </div>
      ))}
    </div>
  )}

  <hr style="margin: 30px 0;">
  <p>
    <a href="/">← 返回首页</a> | 
    <a href="/photos">查看照片页面</a> | 
    <a href="/debug-notion">Notion连接调试</a>
  </p>
</body>
</html> 